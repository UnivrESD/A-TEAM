<root>
    <tracereader name="mangroveTraceReader">
        <vcdParserConfig>
            <clockSignal name="clk"/>
            <splitSignals value="No"/>
            <addModulePathToVariables value="No"/>
            <convertSingleBitLogicToBool value="Yes"/>
        </vcdParserConfig>
    </tracereader>



    <coneminer name="manualDefinition">
        <coneOfInfluence name="cone1">
            <directions>
            </directions>
            <atomicPropositions>
                <atomicPorposition formula="state" dir="in"/>
		<atomicProposition formula="req1" dir="in"/>
		<atomicProposition formula="req2" dir="in"/>
		<atomicProposition formula="gnt1" dir="out"/>
                <atomicProposition formula="gnt2" dir="out"/>
<!-- 
		<atomicProposition formula="gnt2" dir="out"/>
-->
            </atomicPropositions>
        </coneOfInfluence>
    </coneMiner>

    <!-- 
        The template is "always(antecedent -> consequent)"
        The antecedent is generated automatically
    -->
    <propositionminer name="TBMiner">
        <ConsequentTemplates>
            <template value="p1"/>
	<!-- ############ EXISTENCE: P becomes true ############ -->
	<!--
		After Q until R
		[](Q & !R -> (!R U (P & !R)))
	-->
        <template value="!p1 U (p2 && !p1)"/>
	<!--
		Between Q and R	
		[](Q & !R -> (!R W (P & !R)))
	-->
	<template value="( !p1 U (p2 && !p1) ) || ( false R !p1 )"/>


	
	<!-- ############ ABSENCE: P is false  ############ -->
	<!--
		After Q until R	
		[](Q & !R -> (!P W R))
	-->	
	<template value="( p1 U p2 ) || ( false R !p1 )"/>
	
	<!--
		After Q	
		[](Q -> [](!P))
	-->
	<template value="false R !p1"/>

	<!-- ############ UNIVERSALITY: P is true  ############ -->

	<!--
		After Q	
		[](Q -> [](P))
	-->	
	<template value="false R p1"/>

	<!--
		After Q until R	
		[](Q & !R -> (P W R))
	-->
	<template value="( p1 U p2 ) || false R p1"/>

	<!-- ############ PRECEDENCE: S precedes P ############ 
	 Precedence says that some cause precedes each effect -->
	<!--
		After Q until R	
		[](Q & !R -> (!P W (S | R)))
	-->
	<template value="( !p1 U (p2 || p3) ) || ( false R !p1 )"/>


	<!-- ############ RESPONSE: S responds to P ############ 
	 Response says that some effect follows each cause -->
		
	<!--
		Globally
		[](P -> <>S)
	-->
	<template value="true U p1"/>





		<!--
			Eventually:= true U p
			Always:= false R p
			p1 W p2 = ( p1 U p2 ) V always p1
		-->
	    
                </templates>
            </propositionminer>

            <propertyminer name="A-teamMiner">
                <constraints maxVariables="2" maxNextDepth="2"/>
                    <!--
                        <faultyTraces list="bl_master/faultyTraces/traces.xml"/>
                    -->
                    </propertyminer>

                    <!--
                        <propertyQualifier name="FBQualifier"/> 
                    -->

    <propertyprinter name="sva">
        <generateChecker value="No" name="buslayer_master"/>
    </propertyprinter>

</root>
